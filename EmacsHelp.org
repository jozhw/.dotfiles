#+title: Emacs Help

* Commenting
** =C-x C-;=

Comment or uncomment the current line (comment-line). If the region is active, comment or uncomment the lines in the region instead. 

* Dired
** =C-x d=

Enter dired mode.

** =C-x C-q=

Enter Wdired mode (write dired).

In this mode, you can edit file names just like you would any file. However, when you have completed the edits of the dired, make sure to run the command =C-c C-c= to finish.

* Magit

** Global Commands

- =C-x g= (=magit-status=): Open Magit status buffer.
- =C-c M-g= (=magit-dispatch-popup=): Open Magit command popup.
- =q= (=magit-mode-quit-window=): Close Magit buffer.
- =C-c M-c= (=magit-commit=): Start commit process.
- =C-c M-p= (=magit-push-popup=): Push changes.
- =C-c M-f= (=magit-pull-popup=): Pull changes.
- =C-c M-b= (=magit-branch-popup=): Manage branches.

** Status Buffer

- =TAB=: Expand/collapse section.
- =S= (=magit-stage-item=): Stage changes.
- =U= (=magit-unstage-item=): Unstage changes.
- =c= (=magit-commit-popup=): Commit changes.
- =P= (=magit-push-popup=): Push changes.
- =F= (=magit-pull-popup=): Pull changes.
- =b= (=magit-branch-popup=): Manage branches.
- =l l= (=magit-log=): View commit log.
- =r= (=magit-refresh=): Refresh status buffer.
- =d= (=magit-diff-popup=): Show changes.

** Diff Buffer

- =n= (=magit-section-forward=): Move to the next hunk.
- =p= (=magit-section-backward=): Move to the previous hunk.
- =s= (=magit-stage=): Stage current hunk.
- =u= (=magit-unstage=): Unstage current hunk.
- =C-c C-a= (=magit-diff-show-or-scroll-up=): Scroll up in diff buffer.
- =C-c C-e= (=magit-diff-show-or-scroll-down=): Scroll down in diff buffer.

** Log Buffer
- =l l= (=magit-log=): Refresh log buffer.
- =RET=: Show details of the commit at point.
- =d= (=magit-diff-visit-file=): Show changes for the commit at point.
- =TAB=: Toggle commit details.

** Commit Buffer
- =C-c C-c= (=magit-commit=): Finish the commit.
- =C-c C-a= (=magit-commit-ammend=): Amend the last commit.

** Branch Popup
- =b c= (=magit-branch-create=): Create a new branch.
- =b k= (=magit-branch-delete=): Delete a branch.
- =b m= (=magit-branch-move=): Rename a branch.
- =b r= (=magit-branch-rename=): Rename the current branch.
- =b c= (=magit-branch-checkout=): Checkout a branch.
  
* Org

To change the view to outline or full view use =SHIFT-TAB= repeatedly for the desired visual look.

To condense or uncondense content under a heading, make sure the cursor is on the same line as the heading and use =TAB= to cycle through uncondensing or condensing the content.

** Org-Latex

[[https://jakebox.github.io/youtube/org_latex_video.html][Straightfoward Emacs guide]]. The following is copied from that guide.

*** Create & include a =SETUPFILE=

A =SETUPFILE= is simply a file that contains some sort of org mode configuration. For example, the =#+LATEX_CLASS:= we saw earlier. Or, maybe =#+LATEX_HEADER:=. It could even be as simple as =#+TITLE:=. In this =SETUPFILE= we can place all of our lines of LaTeX code we want included in the final generated document. This is a very powerful and easy method of perfectly customizing our export.

Linking the =SETUPFILE=:

#+BEGIN_SRC

#+SETUPFILE: ~/Dropbox/Mackup/emacs-stuff/org/jake-standard-latex-export.org

#+END_SRC

*** Structure the =SETUPFILE=

Now, in that =SETUPFILE=, we place the LaTeX lines we normally would put in a =.tex= file. For example, =\usepackage{amsmath}=. Hopefully you have your own favorite =.tex= file setup, but if not I suggest learning LaTeX and/or finding a template online.

I suggest using a macro to add =#+LATEX_CLASS:= to each line, rather than typing it manually of course! Notice the =LaTeX_CLASS:= - the custom one we just created.

#+BEGIN_SRC

#+LaTeX_CLASS: org-plain-latex
#+LaTeX_CLASS_OPTIONS: [letter]
#+LATEX_HEADER: \usepackage{lmodern} % Ensures we have the right font

#+LATEX_HEADER: \usepackage[AUTO]{inputenc}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage{amsmath, amsthm, amssymb}
#+LATEX_HEADER: \usepackage[table, xcdraw]{xcolor}

% and so on...

#+END_SRC

*** Extra Notes

Some notes not covered in the video.

Enable using =listings= for code highlighting

#+begin_src emacs-lisp

  (setq org-latex-listings 't)

#+end_src

In your =SETUPFILE:=

#+BEGIN_SRC

#+LATEX_HEADER: \usepackage{listings}

#+END_SRC

If you enable =org-latex-listings= but don’t include the =listings= package in your TeX file, it will likely not compile (if you are exporting an org file with code blocks).

Useful commands

- =org-latex-preview= - toggles preview LaTeX math at point

* Special Symbols

To access special symbols run the =C-x 8 RET=

** "—" (=em-dash=)
